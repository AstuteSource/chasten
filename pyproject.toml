[tool.poetry]
name = "chasten"
version = "0.1.0"
description = "Chasten checks the AST of a Python program!"
authors = ["Gregory M. Kapfhammer <gkapfham@allegheny.edu>"]
readme = "README.md"

[tool.poetry.scripts]
chasten = "chasten.main:cli"

[tool.poetry.dependencies]
python = "^3.11"
rich = "^13.4.2"
typer = {extras = ["all"], version = "^0.9.0"}
pyastgrep = "^1.2.2"
trogon = "^0.5.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
black = "^23.3.0"
ruff = "^0.0.277"
taskipy = "^1.11.0"
mypy = "^1.4.1"
isort = "^5.12.0"

[tool.ruff]
ignore = [
    "E501", # do not check line length
]
select = [
    "E",    # pycodestyle errors
    "I",    # isort
    "F",    # Pyflakes
    "PL",   # pylint
    "Q",    # flake8-quotes
    "RUF",  # ruff-specific
    "W",    # pycodestyle warnings
    "T201"  # flake8-print
]

[tool.isort]
include_trailing_comma = true
force_single_line = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.taskipy.tasks]
all = "task black && task mypy && task ruff && task test"
lint = "task black && task mypy && task ruff"
black = { cmd = "black chasten tests --check", help = "Run the black checks for source code format" }
fiximports = { cmd = "isort chasten tests", help = "Run isort to fix source code imports" }
fixformat = { cmd = "black chasten tests", help = "Run the black checks for source code format" }
mypy = { cmd = "poetry run mypy chasten", help = "Run the mypy type checker for potential type errors" }
ruff = { cmd = "poetry run ruff check chasten tests", help = "Run the ruff checks using configuration in pyproject.toml" }
test = { cmd = "pytest -x -s", help = "Run the pytest test suite" }
test-silent = { cmd = "pytest -x --show-capture=no", help = "Run the pytest test suite without showing output" }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
